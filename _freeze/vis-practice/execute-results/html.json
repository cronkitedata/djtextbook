{
  "hash": "af26dcd29b555249ebb9975d2e146b78",
  "result": {
    "markdown": "# Visualization exercise {#vis-practice}\n\nYou saw an example of building a visualization from start to finish in the last chapter. Here, though, we're going to start from scratch -- envisioning what kind of vis might be interesting and then trying to create it. It combines your ability to wrangle data with your imagination, and then we'll work together to get it done.\n\n::: {.alert .alert-secondary}\n::: {.alert-heading .font-weight-bolder .fs-3}\nIn this chapter:\n:::\n\n-   Load and wrangle a new version of the Hot 100 data\n-   Draw on a piece of paper the visualization you might want to create\n-   Wrangle the data to make it possible\n-   Try to create the visualizatin, either static or interactive.\n:::\n\nThere are a lot of extra add-ons to the standard `ggplot` library that comes with the tidyverse, so you may end up having to load them to do what you want.\n\n## The data\n\nWe saw the Hot 100 data at the very beginning of your exploration of R. We're going to use a slightly different version of it to create the visualizations because an older version was matched to the Spotify database to extract certain information from each of the songs.\n\nThis data was used as a [TidyTuesday dataset in 2021](https://github.com/rfordatascience/tidytuesday/blob/master/data/2021/2021-09-14/readme.md) (scroll down to get the data dictionaries), so it's a little older than the one we worked on earlier.\n\nThis data has two tables:\n\n1.  The Hot 100 from mid-1958 to mid-2021: <https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2021/2021-09-14/billboard.csv>\n2.  For any songs that are in Spotify, the characteristicso of the song: <https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2021/2021-09-14/audio-features.csv>\n\nThe dada dictionary shows the characteristics from the Spotify songs, but it's a little easier to understand if you take a look at Juan De Dios Santos' post, asking: \"Is my Spotify music boring? An analysis involving music, data, and machine learning\"\\[https://towardsdatascience.com/is-my-spotify-music-boring-an-analysis-involving-music-data-and-machine-learning-47550ae931de\\]\n\n### Examples\n\nAll of these examples were made with a the version of R and the tidyverse that was used in 2021, so you'll see a few things in the code that are different, notably the use of `%>%` instead of `|>` as the pipe. They are either R scripts (.R extension) or R Markdown (.Rmd extension) , which is the predecessor to Quarto.\n\n#### TidyTuesday videos\n\n[David Robinson](https://en.wikipedia.org/wiki/David_G._Robinson_(data_scientist)), a data scientist at Heap, often creates live demos of his exploration of TidyTuesday datasets -- data he's never seen before. They're long (usually about an hour), but you can watch him decide what to do and how to do it live. [He made this video](https://www.youtube.com/live/bXrUhGzUhXE?feature=share) for the Hot 100 data. (The second half gets into machine learning / AI to make predictions -- skip that part if you watch the video).\n\nHere are a few screen shots from that video -- they're closer to our exploratory visualization than the polished ones below;\n\n#### Visualizing characteristics\n\nThese are really polished, publication-quality vis examples made in R, but you can take inspiration from these to do draft versions for the purpose of exploration.\n\n[Laurence Horton](https://laurencehorton.github.io/billboard-top-100/) did a few quick charts to look at the Spotify characteristics.\n\n[Laura Navarro](https://lauranavarroviz.wordpress.com/tag/tidytuesday-2/)shows us what \\[annotation can do for a chart\\]((https://github.com/lau-cloud/TidyTuesdaycode/blob/master/Billboard/script.R) . I'm super surprised at the relatively low showing of hip hop, but ...\n\n![](assets/images/vis-practice-navarro-genres.png)\n\n[Danielle Navarro](https://blog.djnavarro.net/posts/2021-09-14_tidy-tuesday-billboard/) wrote a full tutorial aimed at beginners in R , walking through the data to find and visualize all of Britney Spears' hits. It has the added feature of explaining how to find her using regular expressions! (Yes, they're both people named Navarro. I don't know if they're the same person.)\n\nAnd [Javier Tamayo-Leiva](https://tamayoleivaj.com/gallery/) went a little crazy with colors but found an interesting way to visualize the top hits using two dimensions: Number of weeks at No. 1 and the \"energy\" of the song. [Here is the R code for that chart.](https://github.com/TamayoLeivaJ/TidyTuesday/blob/gh-pages/2021/2021_Week_038/2021_Week_038.R)\n\n![hot100](assets/images/vis-practice-tamayoLeivaJ.png)\n\n## Your turn\n\nYou've been through a lot, so let's review the steps you have to take to make a visualization:\n\nLoad the data in this case using a `read_csv()` function. There are two datasets, if you want to use them both.\n\n1.  Wrangle the data. You will probably need to filter, group, count or otherwise summarize the data. For example, the \"Evolution of Genres\" probably starts with a dataset by year and genre.\n2.  Decide on the \"geom\" that you want to use. We haven't gone through a lot of these yet, so I'm listing some of the common ones below.\\\n3.  You might want to change themes and color palettes, which is is a little harder. Get the basic visualization down before you start polishing!\n\nYou might want to use the <https://r-graph-gallery.com/> site for inspiration, which always has the packages required and the exact commands you need make it.\n\n::: callout-tip\nYou may end up seeing a lot of code in the examples that start with `fct_` -- these are turning words into categories that are sorted on a particular element, such as the number of times that they show up. It turns words into categories that have numbers underneath the words so that they are always the same and every possible category is defined. These are called factors and we haven't really dealt with them. But they're useful. They depend on loading a library of the tidyverse called `forcats`\n::: \n\n\n          ggplot (  data = df_name, \n                    aes (\n                      x = column_name,\n                      y = column_name,\n                      fill = column_to_define_the_fill,\n                      color = column_to_define_the_lines_and_borders,\n                      size = column_to_define_the_size\n                      ) \n                    ) +\n                    geom_something ( aes (`columns that only refer to this geom`) )\n                    facet_wrap ( column ~ column ) +\n                    extras ()\n      \n\n### Common \"geoms\" \n\n-   `geom_point()`\n\n-   `geom_line()`\n\n-   `geom_bar()`\n\n-   `geom_area()`\n\nOther tutorials and cheat sheets go into much more detail:\n\n-   The [\"ggplot\" chapter](http://rafalab.dfci.harvard.edu/dsbook/ggplot2.html) of Rafael A. Irizarry's Introduction to Data Science\n\n-   The Posit [cheat sheet](https://github.com/rstudio/cheatsheets/blob/main/data-visualization.pdf) for ggplot\n\n-   Kiernan Healy's \"[Data visualization: A practical introduction](https://socviz.co/index.html#preface) is a whole book on ggplot.\n\n## One quick plot\n\nThe very first day we looked at R, I showed you one quick plot based on a Hot 100 dataset that I'd created with just the 21 songs that stayed on the Hot 100 for at least a year list during the 2000s. Now that code may make a little more sense to you\n\n\n\n\n::: {.cell lael='hot-100-read'}\n\n```{.r .cell-code}\nhot100 <- readRDS( \n  url (\"https://cronkitedata.s3.amazonaws.com/rdata/top_songs.RDS\")\n  )\n```\n:::\n\n::: {.cell .column-screen-inset-right}\n\n```{.r .cell-code}\nhot100 |> \n  ggplot ( \n        aes ( x=chart_date, y=hit, color=this_week ) \n        ) +\n       geom_point(  size= .25) +\n  # label the color variable.\n  labs( color = \"Hot 100 #\") +\n  theme_minimal( ) +\n  theme(axis.title.x = element_blank(),\n          axis.title.y = element_blank(), \n        legend.position= \"bottom\") \n```\n\n::: {.cell-output-display}\n![](vis-practice_files/figure-html/hot-100-top-10-list-1.png){width=672}\n:::\n:::\n\n\n### Other sources to learn about ggplot\n\n* [ggplot2: Elegant Graphics for Data Analysis](https://ggplot2-book.org/index.html) \n\n* [Data Visualization: A practical Guide](https://socviz.co/)\n\n* Cedric Sherer's [list of resources](https://www.cedricscherer.com/top/links/), and his materials for the [2-day workshop at the RStudio Conference 2022](https://rstudio-conf-2022.github.io/ggplot2-graphic-design/)\n\n* \n\n\n",
    "supporting": [
      "vis-practice_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\n<script src=\"site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}